# Generated by Django 4.2.4 on 2023-09-08 00:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion

def populate_teams(apps, schema_editor):
    Team = apps.get_model("mlb-scouting-report", "Team")
    TEAMS = [
        ("ari", "Arizona Diamondbacks"),
        ("atl", "Atlanta Braves"),
        ("bal", "Baltimore Orioles"),
        ("bos", "Boston Red Sox"),
        ("chc", "Chicago Cubs"),
        ("cws", "Chicago White Sox"),
        ("cin", "Cincinnati Reds"),
        ("cle", "Cleveland Guardians"),
        ("col", "Colorado Rockies"),
        ("det", "Detroit Tigers"),
        ("hou", "Houston Astros"),
        ("kc", "Kansas City Royals"),
        ("laa", "Los Angeles Angels"),
        ("lad", "Los Angeles Dodgers"),
        ("mia", "Miami Marlins"),
        ("mil", "Milwaukee Brewers"),
        ("min", "Minnesota Twins"),
        ("nym", "New York Mets"),
        ("nyy", "New York Yankees"),
        ("oak", "Oakland Athletics"),
        ("phi", "Philadelphia Phillies"),
        ("pit", "Pittsburgh Pirates"),
        ("sd", "San Diego Padres"),
        ("sf", "San Francisco Giants"),
        ("sea", "Seattle Mariners"),
        ("stl", "St. Louis Cardinals"),
        ("tb", "Tampa Bay Rays"),
        ("tex", "Texas Rangers"),
        ("tor", "Toronto Blue Jays"),
        ("was", "Washington Nationals"),
    ]

    for code, name in TEAMS:
        Team.objects.create(code=code, name=name)

class Migration(migrations.Migration):

    dependencies = [
        ('player', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_teams),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.AlterField(
            model_name='category',
            name='slug',
            field=models.SlugField(unique=True),
        ),
        migrations.CreateModel(
            name='Pitcher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_name', models.CharField(max_length=255)),
                ('report_date', models.DateField(auto_now_add=True)),
                ('declarative_statement', models.TextField(blank=True, max_length=1024, null=True)),
                ('position', models.CharField(choices=[('SP', 'Starting Pitcher'), ('RP', 'Relief Pitcher'), ('CL', 'Closing Pitcher')], max_length=10)),
                ('throwing_arm', models.CharField(choices=[('R', 'Right'), ('L', 'Left')], max_length=20)),
                ('overall_grade', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('future_grade', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pitchers', to='player.category')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pitchers', to='player.team')),
            ],
            options={
                'ordering': ('-report_date',),
            },
        ),
        migrations.CreateModel(
            name='Pitch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pitch_type', models.CharField(choices=[('Four-seam Fastball', 'Four Seam Fastball'), ('Two-seam Fastball', 'Two Seam Fastball'), ('Cutter', 'Cutter'), ('Splitter', 'Splitter'), ('Slider', 'Slider'), ('Curveball', 'Curveball'), ('Forkball', 'Forkball'), ('Slurve', 'Slurve'), ('Screwball', 'Screwball'), ('Changeup', 'Changeup'), ('Palmball', 'Palmball'), ('Circle Changeup', 'Circle Changeup'), ('Kunckleball', 'Knuckleball'), ('Eephus', 'Eephus'), ('Knuckle Curve', 'Knuckle Curve'), ('Sinker', 'Sinker'), ('Sweeper', 'Sweeper')], max_length=20)),
                ('velocity_low', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(120)])),
                ('velocity_high', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(120)])),
                ('grade', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('pitch_future_value', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('comments', models.TextField(max_length=1024)),
                ('pitcher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pitches', to='player.pitcher')),
            ],
        ),
        migrations.CreateModel(
            name='Hitter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_name', models.CharField(max_length=255)),
                ('report_date', models.DateField(auto_now_add=True)),
                ('declarative_statement', models.TextField(blank=True, null=True)),
                ('field_position', models.CharField(choices=[('P', 'Pitcher'), ('C', 'Catcher'), ('1B', 'First Baseman'), ('2B', 'Second Baseman'), ('3B', 'Third Baseman'), ('SS', 'Shortstop'), ('LF', 'Left Field'), ('CF', 'Center Field'), ('RF', 'Right Field'), ('DH', 'Designated Hitter')], max_length=10)),
                ('batting_position', models.CharField(choices=[('R', 'Right'), ('L', 'Left'), ('Switch', 'Switch')], max_length=10)),
                ('throwing_arm', models.CharField(choices=[('R', 'Right'), ('L', 'Left')], max_length=10)),
                ('hit', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')], help_text='Hit rating between 30 to 80', verbose_name='Hit rating')),
                ('hit_future_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('hit_comments', models.TextField(blank=True, max_length=255, null=True)),
                ('power', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')], help_text='Power rating between 30 to 80', verbose_name='Power rating')),
                ('power_future_value', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('power_comments', models.TextField(blank=True, max_length=255, null=True)),
                ('fielding', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('fielding_future_value', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('fielding_comments', models.TextField(blank=True, max_length=255, null=True)),
                ('throwing', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('throwing_future_value', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('throwing_comments', models.TextField(blank=True, max_length=255, null=True)),
                ('run', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('run_future_value', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('run_comments', models.TextField(blank=True, max_length=255, null=True)),
                ('overall_grade', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('future_grade', models.IntegerField(choices=[(30, 'Thirty'), (35, 'Thirty Five'), (40, 'Fourty'), (45, 'Fourty Five'), (50, 'Fifty'), (55, 'Fifty Five'), (60, 'Sixty'), (65, 'Sixty Five'), (70, 'Seventy'), (75, 'Seventy Five'), (80, 'Eighty')])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hitters', to='player.category')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hitters', to='player.team')),
            ],
            options={
                'ordering': ('-report_date',),
            },
        ),
    ]
